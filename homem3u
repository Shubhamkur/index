


<head>  
    <meta charset="UTF-8">  
    <meta name="viewport" content="width=device-width, initial-scale=1.0">  

  
<title>JOIN TV4WAP LIVE4WAP YUPPTV</title>
    
  
<style>
.active{background:red}
.fix{visibility:hidden}
.fixed{background:gold;position:fixed}
.tab-pane{overflow: hidden;
  border: 1px solid #fff;
  background-color: #f1f1f1;align:center;vertical-align:middle;vertical-align:middle;align:center;align-items:center;vertical-align:middle;horizontal-align:middle;} 
  
 .tab-content{background:SeaShell;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding-top: 10px;  padding-left: 4px;
  padding-right: 4px;
  padding-bottom: 64px;

  transition: 0.3s;
  font-size: 9px;align:center;vertical-align:middle;vertical-align:middle;align:center;align-items:center;vertical-align:middle;horizontal-align:middle;width:100%}

</style>
  <style>
a:link, a:visited {color: white;
  

  text-align: center;
  text-decoration: none;
  display: inline-block;
}

a:hover, a:active {
  color: black;
}
    
        :root {
            --bg-dark: #121212;
            --bg-medium: #1E1E1E;
            --text-primary: #FFFFFF;
            --text-secondary: #B0B0B0;
            --telegram-primary: #0088cc;
            --telegram-hover: #0370a7;
            --transition-speed: 0.3s;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--bg-dark);
            color: var(--text-primary);
            line-height: 1.6;
        }

        .container {align:center;
            max-width: 1600px;
            margin: 0 auto;
            padding: 20px;
            width: 100%;
        }

        

        .telegram-btn {position: fixed;
            background-color: gold;
            
            padding: 2px 2px;
            
            text-decoration: none;
            
            transition: all 0.2s ease;
            
            align-items: center;
            justify-content: center;
            gap: 15px;
            white-space: nowrap;
            width: 100%;
            flex-shrink: 0;
        }
.telegram-btn1 {
            background-color:red;
            color: gold;
            padding: 2px 2px;
            border-radius: 0px;
            text-decoration: none;
            font-weight: 900;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            white-space: nowrap;
            
            flex-shrink: 0;
        }
.telegram-btn2 {
            background-color: green;
            color:red;
            padding: 2px 2px;
            border-radius: 0px;
            text-decoration: none;
            font-weight: 900;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            white-space: nowrap;
            
            flex-shrink: 0;
        }

        

        .file-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 25px;
            width: 100%;
        }

        .directory-item {
            background-color: var(--bg-medium);
            border-radius: 12px;
            overflow: hidden;
            transition: transform var(--transition-speed), box-shadow var(--transition-speed);
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .directory-item:hover {
            transform: scale(1.05);
            box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
        }

        .directory-item img {
            width: 150px;
            height: 100px;
            margin-bottom: 5px;
            object-fit: contain;
        }

        .directory-item a {
            color: var(--text-primary);
            text-decoration: none;
            font-size: 0.6rem;
            font-weight: 500;  /* Changed from 500 to 400 for lighter font weight */
            width: 100%;
        }

        .directory-item b {
            font-weight: 500;  /* Changed from default bold to 400 for lighter font weight */
        }

        @media (max-width: 768px) {
            .file-container {
                grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
                gap: 5px;
            }

            .directory-item {
                padding: 5px;
            }

            .directory-item img {
                width: 80px;
                height: 60px;
            }

            .directory-item a {
                font-size: 0.6rem;
            }
        }

        @media (max-width: 480px) {
            .file-container {
                grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
                gap: 5px;
            }

            .directory-item {
                padding: 5px;
            }

            .directory-item img {
                width: 80px;
                height: 60px;
            }

            .directory-item a {
                font-size: 0.6rem;
            }
        }  .search-bar {padding:4px;
            text-align: center;
            margin-bottom: 0px;border: 0px solid #A8E4A0;top:30px;position:fixed
                       }
    </style>
    
         
    


</head>
  <table class="telegram-btn"><tr><td class="telegram-btn1" width="50%"><a href="https://t.me/tvgotk">LIVE4WAP </a></td><td class="telegram-btn2" width="50%"><a href="https://t.me/tv4wap">TV4WAP </a></td></tr></table>
 <table class="telegram-btn1"><tr><td class="telegram-btn1" width="50%"><a href="https://t.me/tvgotk">LIVE4WAP </a></td><td class="telegram-btn2" width="50%"><a href="https://t.me/tv4wap">TV4WAP </a></td></tr></table>
 
   <div class="search-bar"> <input type="text" id="search-input" placeholder="Search Channels" onkeyup="searchChannels()"></div>      
        
        
                
        
            <div class="tab-content">
  <div class="tab-pane">
<div class="container">
<div id="channel-list" class="file-container"> </div>
</div></div></div>

       




    </div>



<script>  
        let neonActive = true;  
        let player;  
        let sharedHdnea = ''; 

            
        // Fetch and parse M3U  
        async function fetchM3U() {  
            try {  
                const response = await fetch('https://live4wap.neocities.org/New.txt');  
                       
                const m3uText = await response.text();  
                return parseM3U(m3uText);  
            } catch (error) {  
                console.error('Error fetching M3U:', error);  
                return [];  
            }  
        }  

        function parseM3U(m3uText) {  
            const lines = m3uText.split('\n').map(line => line.trim());  
            const channels = [];  
            let currentChannel = null;  

            for (const line of lines) {  
                if (line.startsWith('#EXTM3U')) {  
                    continue;  
                } else if (line.startsWith('#EXTINF:')) {  
                    currentChannel = {};  
                    const match = line.match(/tvg-id="([^"]+)"\s+tvg-logo="([^"]+)"\s+group-title="([^"]+)"\s*,(.+)/);   
                   if (match) {  
                        currentChannel.name = match[4];  
                        currentChannel.logo = match[2];  
                    }  
                } else if (line.startsWith('#KODIPROP:inputstream.adaptive.license_key=')) {  
                    const keyMatch = line.match(/license_key=([^:]+):(.+)/);  
                    if (keyMatch && currentChannel) {  
                        currentChannel.mod = keyMatch[1];  
                        currentChannel.key = keyMatch[2];  
                    }  
                } else if (line.startsWith('#EXTVLCOPT:http-user-agent=')) {  
                    if (currentChannel) {  
                        currentChannel.userAgent = line.replace('#EXTVLCOPT:http-user-agent=', '');  
                    }  
                } else if (line.startsWith('#EXTHTTP:')) {  
                    const httpMatch = line.match(/"cookie":"__hdnea__=(.+)"/);  
                    if (httpMatch && currentChannel) {  
                        currentChannel.hdnea = httpMatch[1];  
                        sharedHdnea = httpMatch[1]; // Store the cookie for custom channels  
                    }  
                } else if (line && !line.startsWith('#') && currentChannel) {  
                    currentChannel.url = line;  
                    channels.push(currentChannel);  
                    currentChannel = null;  
                }  
            }  
            return channels;  
        }  

        // Define custom channels  
        const customChannels = [];  

        // Load channels into grid  
        async function loadChannels() {  
            

            const m3uChannels = await fetchM3U();  
            // Update custom channels with the fetched cookie  
            customChannels.forEach(channel => {  
                channel.hdnea = sharedHdnea;  
            });  
            // Combine M3U channels with custom channels (M3U first, then custom)  
            const channels = [...m3uChannels, ...customChannels];  
            
            const channelList = document.getElementById('channel-list');  

            if (channels.length === 0) {  
                channelList.innerHTML = '<div>No channels found.</div>';  
                return;  
            } 

            
            channels.forEach((channel, index) => {  
     
const tile = document.createElement('div');  
                tile.className='';  
                


tile.innerHTML = `<div class="directory-item" id="${channel.name}"><a  href="https://tv4wap.github.io/p1?url=${channel.url}"><img src="${channel.logo}" alt=""><p>${channel.name}</p></a></div>`;
       
tile.onclick = () => switchChannel(channel.url);


                
                channelList.appendChild(tile);  
            });  
        }  

        

            

                

            
                

        

        loadChannels();  
        
</script>
<style>.content-table {              text-align: center;position: fixed;             color: #333;position: fixed;bottom:0px;bottom:0px ;text-align:center;background-color:gold; border-collapse: collapse; margin: 1px 0;  font-size: 0.9em;  min-width: 100%;  border-radius: 3px ;  overflow: hidden;  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);}.content-table thead tr {  background-color:gold;  color: #ffffff;  text-align: center;  font-weight: bold}.content-table th,.content-table td {color:#fff;  padding:  1px;border:1px solid gold;background:}.content-table tbody tr {  border: 1px solid #dddddd;}.content-table tbody tr:nth-of-type(even) {  background-color: #f3f3f3;}.content-table tbody tr:last-of-type {  border: px solid #009879;}.content-table tbody tr.active-row {  font-weight: bold;  color: #009879;}</style><table class="content-table">  <thead>     <tr>      <th width="30%"><a href="https://t.me/tvgotk"><img src="https://blogger.googleusercontent.com/img/a/AVvXsEgS2KS8R90zouZEqp4NV8v8mXnUaa0CH4ms-RUnJnRLmYj5zdegccxN10-YXkJArUDOzCjksz77YlETLC63edZYUaDyYBaMPWDVDuyDjYV5bhhhYa5FYgu2qHkd0FcCq-Au_2YXSYza4YGnv1WgRR2O_caQI8nR6SRPJFqKVQICOnjzWhsi3VWe5Nzjewg" width="90%" height="40px"></a></th>            <td><a href="https://t.me/tvgotk"><button><b>t.me/tvgotk</b> </button></a></td>            <th width="30%"><a href="https://t.me/tv4wap"><img src="https://blogger.googleusercontent.com/img/a/AVvXsEgdW6vop6CO-Sw5e7USP7uj_dCdoQJWSYALuTqDa0Kh5m7H0jl1rSMltPVtDrlKIWPxGe5HLwMd8z_TnDWYFB-ePgb_DbI5LJozDpyvP0L7sK-W422Cm02k3hzZ0XzNhYaJ2A80MT5l7nlebxLL16uFvTKSNRPNr3Ctb51dVMShgVNDsu5XHpCtdVSbW0g" width="90%" height="40px"></a></th>      <td><a href="https://t.me/tv4wap"> <button><b>t.me/tv4wap</b></button> </a></td> </tr></table>

<script> function filterChannels() { var selectedGroup = document.getElementById('group-select').value; var channels = document.querySelectorAll('.directory-item'); channels.forEach(function(channel) { if (selectedGroup === 'all' || channel.getAttribute('data-group') === selectedGroup) { channel.style.display = 'inline-block'; } else { channel.style.display = 'none'; } }); } function searchChannels() { var input = document.getElementById('search-input').value.toLowerCase(); var channels = document.querySelectorAll('.directory-item'); channels.forEach(function(channel) { var name = channel.getAttribute('data-name').toLowerCase(); if (name.includes(input)) { channel.style.display = 'inline-block'; } else { channel.style.display = 'none'; } }); } function searchChannels() { var input = document.getElementById('search-input').value.toLowerCase(); var channels = document.querySelectorAll('.directory-item'); channels.forEach(function(channel) { var name = channel.getAttribute('id').toLowerCase(); if (name.includes(input)) { channel.style.display = 'inline-block'; } else { channel.style.display = 'none'; } }); } const checkbox = document.getElementById("checkbox"); checkbox.addEventListener("change", () => { document.body.classList.toggle("dark-mode"); }); </script>








